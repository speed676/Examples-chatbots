diff --git a/README.md b/README.md
index a6c76f0..5d8ddb5 100644
--- a/README.md
+++ b/README.md
@@ -553,6 +553,7 @@ Object that stores a specific message that can be sent to/received from a user.
         * [.autoplay](#Message+autoplay) ⇒ <code>boolean</code>
         * [.noSave](#Message+noSave) ⇒ <code>boolean</code>
         * [.participants](#Message+participants) ⇒ <code>array</code>
+        * [.chatType](#Message+chatType) ⇒ <code>string</code>
         * [.mention](#Message+mention) ⇒ <code>string</code>
         * [.picked](#Message+picked) ⇒ <code>array</code>
         * [.metadata](#Message+metadata) ⇒ <code>object</code>
@@ -756,7 +757,13 @@ See https://dev.kik.com/#/docs/messaging#video
 <a name="Message+participants"></a>

 ### message.participants ⇒ <code>array</code>
-See https://dev.kik.com/#/docs/messaging#participants
+See https://dev.kik.com/#/docs/messaging#participants (will be undefined for receipt messages)
+
+**Kind**: instance property of <code>[Message](#Message)</code>
+<a name="Message+chatType"></a>
+
+### message.chatType ⇒ <code>array</code>
+See https://dev.kik.com/#/docs/messaging#all-received-chat-messages-excluding-receipts

 **Kind**: instance property of <code>[Message](#Message)</code>
 <a name="Message+mention"></a>
diff --git a/lib/message.js b/lib/message.js
index 2847baa..345443e 100644
--- a/lib/message.js
+++ b/lib/message.js
@@ -160,6 +160,30 @@ class Message {
     }

     /**
+     *  See https://dev.kik.com/#/docs/messaging#all-received-chat-messages-excluding-receipts
+     *  @return {boolean}
+     */
+    isInPublicChat() {
+        return this.chatType === 'public';
+    }
+
+    /**
+     *  See https://dev.kik.com/#/docs/messaging#all-received-chat-messages-excluding-receipts
+     *  @return {boolean}
+     */
+    isInPrivateChat() {
+        return this.chatType === 'private';
+    }
+
+    /**
+     *  See https://dev.kik.com/#/docs/messaging#all-received-chat-messages-excluding-receipts
+     *  @return {boolean}
+     */
+    isInDirectChat() {
+        return this.chatType === 'direct';
+    }
+
+    /**
      *  Constructs a JSON payload ready to be sent to the
      *  bot messaging API
      *  @return {object}
@@ -589,6 +613,14 @@ class Message {
     }

     /**
+     *  See https://dev.kik.com/#/docs/messaging#all-received-chat-messages-excluding-receipts
+     *  @return {string}
+     */
+    get chatType() {
+        return this._state.chatType;
+    }
+
+    /**
      *  See https://dev.kik.com/#/docs/messaging#mention
      *  @return {string}
      */
diff --git a/test/test-message-construction.js b/test/test-message-construction.js
index 5b309d7..4f6ca2e 100644
--- a/test/test-message-construction.js
+++ b/test/test-message-construction.js
@@ -635,6 +635,54 @@ describe('Message parsing', () => {
         assert.deepEqual(message.participants, ['sometestguy', 'sometestguy2']);
     });

+    it('handles public chatType', () => {
+        const message = Bot.Message.fromJSON({
+            'type': 'text',
+            'from': 'atestuser',
+            'id': '6d8d060c-3ae4-46fc-bb18-6e7ba3182c0f',
+            'timestamp': 1399303478832,
+            'chatType': 'public',
+            'body': 'Test'
+        });
+
+        assert.ok(message.isTextMessage());
+
+        assert.equal(message.chatType, 'public');
+        assert.ok(message.isInPublicChat());
+    });
+
+    it('handles private chatType', () => {
+        const message = Bot.Message.fromJSON({
+            'type': 'text',
+            'from': 'atestuser',
+            'id': '6d8d060c-3ae4-46fc-bb18-6e7ba3182c0f',
+            'timestamp': 1399303478832,
+            'chatType': 'private',
+            'body': 'Test'
+        });
+
+        assert.ok(message.isTextMessage());
+
+        assert.equal(message.chatType, 'private');
+        assert.ok(message.isInPrivateChat());
+    });
+
+    it('handles direct chatType', () => {
+        const message = Bot.Message.fromJSON({
+            'type': 'text',
+            'from': 'atestuser',
+            'id': '6d8d060c-3ae4-46fc-bb18-6e7ba3182c0f',
+            'timestamp': 1399303478832,
+            'chatType': 'direct',
+            'body': 'Test'
+        });
+
+        assert.ok(message.isTextMessage());
+
+        assert.equal(message.chatType, 'direct');
+        assert.ok(message.isInDirectChat());
+    });
+
     it('handles mentions', () => {
         const message = Bot.Message.fromJSON({
             'type': 'text',
